[
    {
        "id": "975dc518.7069d8",
        "type": "tab",
        "label": "LOGICS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "47a246dcf40ee122",
        "type": "tab",
        "label": "TESTING",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "935e8e5d5dc400ec",
        "type": "tab",
        "label": "QR CODE PRINT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b8f076d184bea351",
        "type": "tab",
        "label": "LOW FLOW TEST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "72a1c292921690de",
        "type": "tab",
        "label": "REWORK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56aadc5c2acdc551",
        "type": "tab",
        "label": "ASSEMBLY",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "853e3c63c60e8c11",
        "type": "tab",
        "label": "BANDING STATION",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d073bdc86cc8e8ec",
        "type": "tab",
        "label": "WATER SOUNDING TEST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "093645b42d728fc1",
        "type": "tab",
        "label": "GEAR PREDICTORS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2f16c5271fa967f5",
        "type": "tab",
        "label": "GEAR ASSEMBLY",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "504ee6764837011b",
        "type": "tab",
        "label": "Q-MAX / Q-MIN   ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "68d5b0cb02c0e29f",
        "type": "tab",
        "label": "ZEROING",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f6afd3241d4c176",
        "type": "tab",
        "label": "PACKING",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "03648c29224fdcf8",
        "type": "postgreSQLConfig",
        "name": "firstOne",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "sample",
        "databaseFieldType": "str",
        "ssl": "true",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "",
        "userFieldType": "str",
        "password": "",
        "passwordFieldType": "str"
    },
    {
        "id": "70fb4efe8493e0ec",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#000000",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#000000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#262626",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "GAS METER TRACEABILITY",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 47,
                "sy": 47,
                "gx": 20,
                "gy": 0,
                "cx": 20,
                "cy": 20,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "224d2f741b82b8a3",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a662ec5f58a81769",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "barcode",
        "name": ""
    },
    {
        "id": "f0a74c3825a74463",
        "type": "ui_group",
        "name": "QR-CODE SCANNING STATION",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f9c6b2e3c4d499b6",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c1f50830b5b0ce98",
        "type": "users_config",
        "appPath": "/users",
        "jwtCookieName": "nr.nodeUsers.jwt",
        "jwtHttpsOnly": false
    },
    {
        "id": "4b63a4fb0af0affd",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "de71f19537dd0440",
        "type": "ui_group",
        "name": "LOW FLOW TESTING STATION-1",
        "tab": "4b63a4fb0af0affd",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e5ee6d401d19a6b",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1a7caf5fe6b7b04",
        "type": "ui_group",
        "name": "QR-CODE PRINTING STATION",
        "tab": "5e5ee6d401d19a6b",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e74db5fb0d3a2140",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "561c41394b7bdc86",
        "type": "ui_group",
        "name": "REWORK STATION",
        "tab": "e74db5fb0d3a2140",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b75409d51edb7333",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "527790b680b6256d",
        "type": "ui_group",
        "name": "ASSEMBLY",
        "tab": "b75409d51edb7333",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0eb84bb7c61662cd",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4ddf2c7e48e5ee22",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f3daddf51f06e53f",
        "type": "ui_group",
        "name": "BANDING STATION",
        "tab": "0eb84bb7c61662cd",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a9a10cc050f8749",
        "type": "ui_group",
        "name": "WATER SOUNDING TEST",
        "tab": "4ddf2c7e48e5ee22",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3deb66dda82d6ed2",
        "type": "ui_group",
        "name": "LOW FLOW TESTING STATION-2",
        "tab": "4b63a4fb0af0affd",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3436afba05474547",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee5083f36c786e27",
        "type": "ui_group",
        "name": "GEAR PREDICTON STATION",
        "tab": "3436afba05474547",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33800b843c9c0877",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5a0ae2b170773904",
        "type": "ui_group",
        "name": "GEAR ASSEMBLY",
        "tab": "33800b843c9c0877",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "26456ee2d41b9968",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3c636316d0534fb9",
        "type": "ui_group",
        "name": "Q - MAX",
        "tab": "26456ee2d41b9968",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eac6952a7ec5c499",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0a31c08114eeef4f",
        "type": "ui_group",
        "name": "ZEROING STATION",
        "tab": "eac6952a7ec5c499",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b9f9d8eef14b6a4",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5e2b21da5762cd15",
        "type": "ui_group",
        "name": "PACKING",
        "tab": "2b9f9d8eef14b6a4",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "64275d858844e2ef",
        "type": "ui_tab",
        "name": "GAS-METER-TRACEABILITY",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "45245a51443e6ce3",
        "type": "ui_group",
        "name": "Q-MIN",
        "tab": "64275d858844e2ef",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "09cefc5d500e07a2",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "Pairing light indication",
        "info": "when payload arrives pass the blue color\nto cell location of the table.",
        "x": 260,
        "y": 60,
        "wires": []
    },
    {
        "id": "616403bc5ebf5eff",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 49",
        "func": "var station = msg.payload.station;\nvar i = msg.payload.i;\nvar part = msg.payload.part;\n\n// Create the dynamic key\nvar dynamicKey = \"cell_\" + i + \"_2\";\nvar dynamicKey2 = \"cell_\" + i + \"_3\";\n\n// Create a new msg.payload object with the dynamic assignment\nmsg.payload = {\n    [dynamicKey]: part,\n    [dynamicKey2]:\"blue\"\n};\n\nreturn msg;\n\n//var partvar = \"cell_\"+i + \"_2\"\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a8d7b448694f848b",
        "type": "inject",
        "z": "975dc518.7069d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cell_3_2\":\"New Value for Row 2, Column 2\",\"cell_3_3\":\"blue\"}",
        "payloadType": "json",
        "x": 150,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "50d1c84736dd588a",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "Status light indication",
        "info": "send the color to cell location of the\n table based on values, \n similar to previous logic",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "04920ba83e70dfa1",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 50",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload.length == 0) {\n    msg.payload = false; \n    return msg;\n}\n\nelse  {\n    \n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "0e0a814ed8c8461d",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "check prev station collection data",
        "info": "",
        "x": 350,
        "y": 280,
        "wires": []
    },
    {
        "id": "d581d7bc9b5f4d52",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 51",
        "func": "msg.collection= flow.get(\"collection\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "3e069e4a76ba223f",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "check prev station status",
        "info": "",
        "x": 310,
        "y": 420,
        "wires": []
    },
    {
        "id": "8139ac32ac07f379",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 52",
        "func": "// Get the current time\nconst now = new Date();\n\n// Calculate the time 75 minutes ago\nconst seventyFiveMinutesAgo = new Date(now.getTime() - (75 * 60000)).getTime();\n\nconst difference = (now.getTime() - msg.payload.timeStamp)\n\nmsg.difference = difference;\nif (msg.payload.status === \"NG\" && (msg.difference >= 75*60*1000)){\n    msg.prompt = \"Data exist but NG\";\n    msg.led =  false; \n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference < 1 * 60 * 1000)) {\n    msg.prompt = \"Data exist but not old older than 75 mins\"\n    msg.led = false;\n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference >= 1 * 60 * 1000)){\n     msg.prompt = \"Data exist and OK\"\n     msg.led = true;\n     return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "91409ab565d4f626",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "check time elapse function",
        "info": "",
        "x": 310,
        "y": 540,
        "wires": []
    },
    {
        "id": "4025353ab3b7c61a",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 53",
        "func": "// Get the current time\nconst now = new Date();\n\n// Calculate the time 75 minutes ago\nconst seventyFiveMinutesAgo = new Date(now.getTime() - (75 * 60000)).getTime();\n\nconst difference = (now.getTime() - msg.payload.timeStamp)\n\nmsg.difference = difference;\nif (msg.payload.status === \"NG\" && (msg.difference >= 75*60*1000)){\n    msg.prompt = \"Data exist but NG\";\n    msg.led =  false; \n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference < 1 * 60 * 1000)) {\n    msg.prompt = \"Data exist but not old older than 75 mins\"\n    msg.led = false;\n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference >= flow.get(\"time\"))){\n     msg.prompt = \"Data exist and OK\"\n     msg.led = true;\n     return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5b0be79965eb7dc0",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 58",
        "func": "// Retrieve the flow variable\nvar a = flow.get('b') || null;\n\n// Check if flowVar is not set, if so, initialize it with the current payload\nif (a === null) {\n    flow.set('b', msg.payload);\n    return msg;\n} \n\nelse {\n    // Compare the current msg.payload - 1 with the flow variable\n    if (msg.payload - 1 === a) {\n        // Update the flow variable with the current msg.payload\n        flow.set('b', msg.payload);\n        return msg;\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "dd286d853d74a56f",
        "type": "function",
        "z": "975dc518.7069d8",
        "name": "function 59",
        "func": "flow.set(\"b\",\"\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6ebdfdae4cc81f95",
        "type": "comment",
        "z": "975dc518.7069d8",
        "name": "check payload is in sequence",
        "info": "",
        "x": 320,
        "y": 660,
        "wires": []
    },
    {
        "id": "fc8ca2d7841ca79b",
        "type": "timer-node",
        "z": "47a246dcf40ee122",
        "name": "",
        "topic": "",
        "timer": 5,
        "payloadOn": "false",
        "payloadOnType": "bool",
        "payloadOff": "true",
        "payloadOffType": "bool",
        "x": 650,
        "y": 520,
        "wires": [
            [
                "75c4c75b0a4bda3a"
            ],
            []
        ]
    },
    {
        "id": "0f98b18c5573ed6a",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "75c4c75b0a4bda3a",
        "type": "debug",
        "z": "47a246dcf40ee122",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 680,
        "wires": []
    },
    {
        "id": "9ed7c9e75a12c769",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "10",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "f767465aa7c857fd",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "50",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "56f8cc0b4de94612",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "100",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "622661ec96479016",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "100",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 780,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "4e563129f979aa09",
        "type": "rbe",
        "z": "47a246dcf40ee122",
        "name": "",
        "func": "rbe",
        "gap": "1%",
        "start": "0",
        "inout": "out",
        "septopics": true,
        "property": "count",
        "topi": "topic",
        "x": 450,
        "y": 520,
        "wires": [
            [
                "fc8ca2d7841ca79b"
            ]
        ]
    },
    {
        "id": "6c427171dde9665f",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "4e563129f979aa09"
            ]
        ]
    },
    {
        "id": "bcd0112302b9dd6f",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "2c4d73f16b5590ce"
            ]
        ]
    },
    {
        "id": "3d9670f1b13864a8",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 290,
        "y": 140,
        "wires": [
            [
                "2c4d73f16b5590ce"
            ]
        ]
    },
    {
        "id": "2c4d73f16b5590ce",
        "type": "function",
        "z": "47a246dcf40ee122",
        "name": "function 57",
        "func": "// Retrieve the flow variable\nvar a = flow.get('b') || null;\n\n// Check if flowVar is not set, if so, initialize it with the current payload\nif (a === null) {\n    flow.set('b', msg.payload);\n    return msg;\n} \n\nelse {\n    // Compare the current msg.payload - 1 with the flow variable\n    if (msg.payload - 1 === a) {\n        // Update the flow variable with the current msg.payload\n        flow.set('b', msg.payload);\n        return msg;\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "b75fed9ef41a2da1"
            ]
        ]
    },
    {
        "id": "8470505339553b1a",
        "type": "function",
        "z": "47a246dcf40ee122",
        "name": "function 56",
        "func": "flow.set(\"b\",\"\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8bccd933576d5a7d",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "2c4d73f16b5590ce"
            ]
        ]
    },
    {
        "id": "44837538edcd3181",
        "type": "inject",
        "z": "47a246dcf40ee122",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "8470505339553b1a"
            ]
        ]
    },
    {
        "id": "b75fed9ef41a2da1",
        "type": "debug",
        "z": "47a246dcf40ee122",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 140,
        "wires": []
    },
    {
        "id": "7577524f7221a5cb",
        "type": "ui_template",
        "z": "935e8e5d5dc400ec",
        "group": "c1a7caf5fe6b7b04",
        "name": "TAB",
        "order": 2,
        "width": 12,
        "height": 1,
        "format": "<button class=\"cctv\" onclick=\"openCCTV()\" style=\"background-color: #acb1c2;\">Click Here For Re-Print Of QR-Code</button>\n\n\n<style>\n    .cctv {\n        display: flex;\n        flex-grow: 1;\n        border: none;\n        outline: none;\n        color: black;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    .cctv:hover {\n        background-color: #222f5d;\n    }\n\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    .nr-dashboard-cardpanel,\n    #eDrishti_Group_1 {\n        background: transparent;\n        border: 0px;\n    }\n\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: rgb(10, 15, 113);\n        background: linear-gradient(207deg, rgba(10, 15, 113, 1) 61%, rgba(19, 27, 184, 1) 100%);\n        overflow: hidden;\n        border-radius: 5px;\n    }\n\n\n    #nr-dashboard-toolbar>h1:nth-child(4) {\n        display: flex;\n        font-size: 1.5rem;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #000000b8;\n        overflow: hidden;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: #79819c;\n        color: black;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n        background-color: #222f5d;\n    }\n\n    \n\n    body.nr-dashboard-theme md-content md-card {\n        background-color: #acb1c2;\n        color: black;\n        font-size: 1.5rem;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .nr-dashboard-theme md-dialog {\n    color: #111111;\n    background-color: #757d93;\n    border: 3px solid #ffffff;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 90,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fd3fbf2b71d0281b",
        "type": "ui_text",
        "z": "935e8e5d5dc400ec",
        "group": "c1a7caf5fe6b7b04",
        "order": 1,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Last Printed QR-Code",
        "format": "{{'3018483376'}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 80,
        "wires": []
    },
    {
        "id": "894b263511b725d2",
        "type": "ui_template",
        "z": "935e8e5d5dc400ec",
        "d": true,
        "group": "c1a7caf5fe6b7b04",
        "name": "LP",
        "order": 4,
        "width": 12,
        "height": 1,
        "format": "<button class=\"cctv\" onclick=\"openCCTV()\" style=\"background-color: #79819c;\">Click Here For Re-Print Of QR-Code</button>\n\n\n<style>\n    .cctv {\n        display: flex;\n        flex-grow: 1;\n        border: none;\n        outline: none;\n        color: black;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        font-size: xx-large;\n        font-weight:bold;\n    }\n\n.cctv:hover {\nbackground-color: #222f5d;\n}\n\n\n.nr-dashboard-theme .nr-dashboard-textinput input {\ncolor: #000000;\nfont-family: inherit;\nborder: none;\nfont-size: xx-large;\nfont-weight: bold;\n}\n\n    .nr-dashboard-cardpanel,\n    #eDrishti_Group_1 {\n        background: transparent;\n        border: 0px;\n    }\n\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: xx-large;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: rgb(10, 15, 113);\n        background: linear-gradient(207deg, rgba(10, 15, 113, 1) 61%, rgba(19, 27, 184, 1) 100%);\n        overflow: hidden;\n        border-radius: 5px;\n    }\n\n\n    #nr-dashboard-toolbar>h1:nth-child(4) {\n        display: flex;\n        font-size: xx-large;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #000000b8;\n        overflow: hidden;\n        border-radius: 5px;\n        font-size:xx-large;\n        font-weight:bold;\n    }\n\n\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #79819c;\n    color: black;\n    }\n    .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #222f5d;\n    }\n\n    .md-button {\n    align-items: center;\n    background-color: #acb1c2;\n    border: 0;\n    border-radius: 5%;\n    box-sizing: border-box;\n    color: black;\n    cursor: pointer;\n    display: inline-block;\n    font-family: inherit;\n    font-size: 55px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-weight: 500;\n    line-height: 36px;\n    margin: 6px 8px;\n    min-height: 36px;\n    min-width: 88px;\n    outline: none;\n    overflow: hidden;\n    padding: 0 8px;\n    position: relative;\n    text-align: center;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: box-shadow .4s cubic-bezier(.25, .8, .25, 1), background-color .4s cubic-bezier(.25, .8, .25, 1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    vertical-align: middle;\n    white-space: nowrap;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n    background-color: #acb1c2;\n    color: black;\n    font-size: xx-large;\n    }\n\n        .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: xx-large;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255,255,255);\n        \n        }\n        .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n        }\n\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 90,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "571b2320c78652be",
        "type": "ui_form",
        "z": "935e8e5d5dc400ec",
        "name": "",
        "label": "",
        "group": "c1a7caf5fe6b7b04",
        "order": 3,
        "width": 12,
        "height": 2,
        "options": [
            {
                "label": "Enter The  Number Of QR-Codes To Be Printed",
                "value": "no",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Please Confirm",
                "value": "confirm",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "no": "",
            "confirm": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "d465f86d340a762a",
                "28dceefbc299f735"
            ]
        ]
    },
    {
        "id": "d465f86d340a762a",
        "type": "function",
        "z": "935e8e5d5dc400ec",
        "name": "function 63",
        "func": "\n\nif(msg.payload.no > 0 && msg.payload.confirm == true){\n    msg.payload = msg.payload.no;\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "6477900a0cd0a5be"
            ]
        ]
    },
    {
        "id": "6477900a0cd0a5be",
        "type": "debug",
        "z": "935e8e5d5dc400ec",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 180,
        "wires": []
    },
    {
        "id": "012ac5df3f7edc53",
        "type": "ui_toast",
        "z": "935e8e5d5dc400ec",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "28dceefbc299f735",
        "type": "function",
        "z": "935e8e5d5dc400ec",
        "name": "function 64",
        "func": "if (msg.payload.no > 0 && msg.payload.confirm == false) {\n    msg.payload = \"Please tick the confirm box\";\n    return msg\n}\n\nelse if (msg.payload.no == null) {\n    msg.payload = \"No number to be printed\";\n    return msg;\n}\n\nelse {\n    msg.payload = \"Print Success\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 240,
        "wires": [
            [
                "012ac5df3f7edc53"
            ]
        ]
    },
    {
        "id": "c38bcb017a2551b3",
        "type": "ui_template",
        "z": "b8f076d184bea351",
        "d": true,
        "group": "de71f19537dd0440",
        "name": "LP",
        "order": 3,
        "width": 9,
        "height": 9,
        "format": "<div ng-init=\"payload = {}\"></div>\n\n<form ng-submit=\"send({payload: payload})\">\n    <table style='width:100%'>\n        <tr>\n            <th>Sub Station</th>\n            <th>Part QR</th>\n            <th>Status</th>\n        </tr>\n\n        <!-- Row for Sub Station 1 -->\n        <tr>\n            <td>Sub Station 1</td>\n            <td>{{msg.payload.station1.value2 || '3018483362'}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': 'green',\n                        'display': 'inline-block',\n                        'width': '40px',\n                        'height': '40px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n\n        <!-- Row for Sub Station 2 -->\n        <tr>\n            <td>Sub Station 2</td>\n            <td>{{msg.payload.station2.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': msg.payload.station2.status === 'OK' ? 'green' : 'red',\n                        'display': 'inline-block',\n                        'width': '40px',\n                        'height': '40px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n\n\n        <!-- Row for Sub Station 3 -->\n        <tr>\n            <td>Sub Station 3</td>\n            <td>{{msg.payload.station3.value2 || '3018483363'}}</td>\n            <td>\n                <span ng-style=\"{\n                            'background-color': 'green',\n                            'display': 'inline-block',\n                            'width': '40px',\n                            'height': '40px',\n                            'border-radius': '50%'\n                           }\">\n                    </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 4</td>\n            <td>{{msg.payload.station4.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station4.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '40px',\n                                'height': '40px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 5</td>\n            <td>{{msg.payload.station5.value2 || '3018483365'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': 'green',\n                                'display': 'inline-block',\n                                'width': '40px',\n                                'height': '40px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 6</td>\n            <td>{{msg.payload.station6.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station6.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '40px',\n                                'height': '40px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 7</td>\n            <td>{{msg.payload.station7.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station7.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '40px',\n                                'height': '40px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <!-- Row for Sub Station 8 -->\n        <tr>\n            <td>Sub Station 8</td>\n            <td>{{msg.payload.station8.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': msg.payload.station8.status === 'OK' ? 'green' : 'red',\n                        'display': 'inline-block',\n                        'width': '40px',\n                        'height': '40px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n    </table>\n    <input type=\"submit\" value=\"Update Status\"/>\n</form>\n\n<script>\n    (function(scope) {\n        scope.checkEnter = function(event, station) {\n            if (event.keyCode === 13) { // Enter key\n                event.preventDefault();\n                var nextStation = station + 1;\n                var nextInput = document.getElementById('input' + nextStation);\n                if (nextInput) {\n                    nextInput.focus();\n                } else {\n                    // If it's the last input, you can choose to focus on the submit button\n                    document.querySelector('[type=\"submit\"]').focus();\n                }\n            }\n        }\n    })(scope);\n</script>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background:#acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: xx-large;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n.nr-dashboard-theme .nr-dashboard-textinput input {\ncolor: #000000;\nfont-family: inherit;\nborder: none;\nfont-size: xx-large;\nfont-weight: bold;\n}\n\n    #Tab_GAS-METER-TRACEABILITY {\n    height: 100vh;\n    //background-image: url(\"/img/logo3.png\");\n    background-color: #acb1c2;\n    background-attachment: fixed;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    }\n\n            .nr-dashboard-cardpanel>p {\n            //group name;\n            max-height: 32px;\n            min-height: 32px;\n            margin-left: 12px;\n            margin-top: 10px;\n            margin-bottom: 12px;\n            font-weight: 700;\n            font-size: xx-large;\n            display: flex;\n            flex-wrap: wrap;\n            flex-direction: row-reverse;\n            align-content: flex-end;\n            justify-content: center;\n            background-color: rgb(255,255,255);\n            \n            }\n            .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n            color: #111111;\n            }\n\n                .md-toolbar-tools h1,\n                .md-toolbar-tools h2,\n                .md-toolbar-tools h3 {\n                font-size: xx-large;\n                font-weight: 800;\n                margin: inherit;\n                font-style: normal;\n                //font-family: serif;\n                }\n                \n                #toolbar {\n                display: flex;\n                background: rgb(255, 255, 255);\n                background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n                }\n                \n                #nr-dashboard-toolbar {\n                justify-content: space-between;\n                }\n\n                md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n                color: transparent;\n                border: none;\n                }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b76e128965c0f632",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 15",
        "func": "let a = [\"RAY19\", \"RAY20\", \"RAY21\", \"RAY22\", \"RAY15\", \"RAY16\", \"RAY17\", \"RAY18\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (a.includes(qr) ){\n    msg.payload.station = qr;\n    msg.payload.i = a.indexOf(qr) + 1;\n    return msg;\n}\n\nelse {\n    msg.payload.part = qr;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 380,
        "wires": [
            [
                "f97ca71fa44f4097"
            ]
        ]
    },
    {
        "id": "f97ca71fa44f4097",
        "type": "join",
        "z": "b8f076d184bea351",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "9b93585e60449418",
                "af4d2c3dfe9f71d3"
            ]
        ]
    },
    {
        "id": "0c28dbb02f216370",
        "type": "ui_text_input",
        "z": "b8f076d184bea351",
        "name": "",
        "label": "Scan Station And Part",
        "tooltip": "",
        "group": "de71f19537dd0440",
        "order": 1,
        "width": 9,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "acf008d31d1365d1",
                "ad4968d0b461c126"
            ]
        ]
    },
    {
        "id": "ad4968d0b461c126",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 17",
        "func": "if (msg.payload.length > 0) {\n    return msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": [
            [
                "b76e128965c0f632",
                "1daa3a501e69126f",
                "713a240444c9de3a"
            ]
        ]
    },
    {
        "id": "acf008d31d1365d1",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 18",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "0c28dbb02f216370"
            ]
        ]
    },
    {
        "id": "9b93585e60449418",
        "type": "mongodb out",
        "z": "b8f076d184bea351",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1330,
        "y": 440,
        "wires": []
    },
    {
        "id": "062af9cee57678fe",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload.station3.status",
                "v": "3018483363",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "0508e69fe45d7d51",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload.station5.status",
                "v": "3018483365",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "e266563031085895",
        "type": "ui_template",
        "z": "b8f076d184bea351",
        "group": "de71f19537dd0440",
        "name": "TAB1",
        "order": 2,
        "width": 9,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n\n<table style=\"width:100%\">\n    <thead>\n        <tr>\n            <th>Substation</th>\n            <th>Part QR</th>\n            <th>Result</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"i in [1,2,3,4,5,6,7,8]\">\n            <td>Sub Station {{i}}</td>\n            <td ng-bind=\"cell_{{i}}_2\"></td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                    }\">\n                </span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "71897d2d31c8f0cb",
        "type": "ui_template",
        "z": "b8f076d184bea351",
        "d": true,
        "group": "de71f19537dd0440",
        "name": "TAB",
        "order": 4,
        "width": 9,
        "height": 8,
        "format": "<div ng-init=\"payload = {}\"></div>\n\n<form ng-submit=\"send({payload: payload})\">\n    <table style='width:100%'>\n        <tr>\n            <th>Sub Station</th>\n            <th>Part QR</th>\n            <th>Status</th>\n        </tr>\n\n        <!-- Row for Sub Station 1 -->\n        <tr>\n            <td>Sub Station 1</td>\n            <td>{{msg.payload.station1 || ''}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': 'green',\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n\n        <!-- Row for Sub Station 2 -->\n        <tr>\n            <td>Sub Station 2</td>\n            <td>{{msg.payload.station2|| ''}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': msg.payload.station2.status === 'OK' ? 'green' : 'red',\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n\n\n        <!-- Row for Sub Station 3 -->\n        <tr>\n            <td>Sub Station 3</td>\n            <td>{{msg.payload.station3.value2 || '3018483363'}}</td>\n            <td>\n                <span ng-style=\"{\n                            'background-color': 'green',\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                           }\">\n                    </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 4</td>\n            <td>{{msg.payload.station4.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station4.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 5</td>\n            <td>{{msg.payload.station5.value2 || '3018483365'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': 'green',\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 6</td>\n            <td>{{msg.payload.station6.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station6.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <tr>\n            <td>Sub Station 7</td>\n            <td>{{msg.payload.station7.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                                'background-color': msg.payload.station7.status === 'OK' ? 'green' : 'red',\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                               }\">\n                        </span>\n            </td>\n        </tr>\n\n        <!-- Row for Sub Station 8 -->\n        <tr>\n            <td>Sub Station 8</td>\n            <td>{{msg.payload.station8.value2 || 'N/A'}}</td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': msg.payload.station8.status === 'OK' ? 'green' : 'red',\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                       }\">\n                </span>\n            </td>\n        </tr>\n    </table>\n    <!-- <input type=\"submit\" value=\"Update Status\"/>-->\n</form>\n\n<script>\n    (function(scope) {\n        scope.checkEnter = function(event, station) {\n            if (event.keyCode === 13) { // Enter key\n                event.preventDefault();\n                var nextStation = station + 1;\n                var nextInput = document.getElementById('input' + nextStation);\n                if (nextInput) {\n                    nextInput.focus();\n                } else {\n                    // If it's the last input, you can choose to focus on the submit button\n                    document.querySelector('[type=\"submit\"]').focus();\n                }\n            }\n        }\n    })(scope);\n</script>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4fe39f2aa11e3025",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cell_2_2\":\"New Value for Row 2, Column 2\"}",
        "payloadType": "json",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "b4f03e7d44671e1e",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cell_3_2\":\"New Value for Row 2, Column 2\",\"cell_3_3\":\"blue\"}",
        "payloadType": "json",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "bfc1808fa72b5c69",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "145",
        "topic": "",
        "payload": "{\"cell_1_3\":\"red\",\"cell_2_3\":\"green\",\"cell_3_3\":\"red\",\"cell_5_3\":\"red\",\"cell_7_3\":\"green\",\"cell_8_3\":\"green\"}",
        "payloadType": "json",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "af4d2c3dfe9f71d3",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 33",
        "func": "var station = msg.payload.station;\nvar i = msg.payload.i;\nvar part = msg.payload.part;\n\n// Create the dynamic key\nvar dynamicKey = \"cell_\" + i + \"_2\";\nvar dynamicKey2 = \"cell_\" + i + \"_3\";\n\n// Create a new msg.payload object with the dynamic assignment\nmsg.payload = {\n    [dynamicKey]: part,\n    [dynamicKey2]:\"blue\"\n};\n\nreturn msg;\n\n//var partvar = \"cell_\"+i + \"_2\"\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "e266563031085895"
            ]
        ]
    },
    {
        "id": "3c494d16d7d176e0",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 16",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\",\"9886836524\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (qr in a ){\n\n}\nelse{\nmsg.payload.part = qr;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "30dabd34e8ef6cd7",
        "type": "ui_template",
        "z": "b8f076d184bea351",
        "d": true,
        "group": "de71f19537dd0440",
        "name": "TAB",
        "order": 5,
        "width": 9,
        "height": 8,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n\n<table style=\"width:100%\">\n    <thead>\n        <tr>\n            <th>Substation</th>\n            <th>Part QR</th>\n            <th>Result</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"i in [1,2,3,4,5,6,7,8]\">\n            <td>Sub Station {{i}}</td>\n            <td ng-bind=\"cell_{{i}}_2\"></td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                    }\">\n                </span>\n            </td>\n        </tr>\n    </tbody>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b8f96ae47c864ddb",
        "type": "ui_template",
        "z": "b8f076d184bea351",
        "group": "3deb66dda82d6ed2",
        "name": "TAB1",
        "order": 2,
        "width": 9,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n\n<table style=\"width:100%\">\n    <thead>\n        <tr>\n            <th>Substation</th>\n            <th>Part QR</th>\n            <th>Result</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"i in [1,2,3,4,5,6,7,8]\">\n            <td>Sub Station {{i}}</td>\n            <td ng-bind=\"cell_{{i}}_2\"></td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                    }\">\n                </span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "04a2ef9010330519",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "713a240444c9de3a",
        "type": "ui_text",
        "z": "b8f076d184bea351",
        "group": "3deb66dda82d6ed2",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "Last Scanned Part",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 360,
        "wires": []
    },
    {
        "id": "25b19ad4dac212a3",
        "type": "inject",
        "z": "b8f076d184bea351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "145",
        "topic": "",
        "payload": "{\"cell_2_3\":\"red\",\"cell_5_3\":\"green\",\"cell_3_3\":\"red\",\"cell_8_3\":\"red\",\"cell_7_3\":\"green\",\"cell_6_3\":\"green\"}",
        "payloadType": "json",
        "x": 690,
        "y": 100,
        "wires": [
            [
                "b8f96ae47c864ddb"
            ]
        ]
    },
    {
        "id": "1daa3a501e69126f",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 60",
        "func": "let a = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (a.includes(qr) ){\n    msg.payload.station = qr;\n    msg.payload.i = a.indexOf(qr) + 1;\n    return msg;\n}\n\nelse {\n    msg.payload.part = qr;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 580,
        "wires": [
            [
                "f3a2de4a9850962a"
            ]
        ]
    },
    {
        "id": "f3a2de4a9850962a",
        "type": "join",
        "z": "b8f076d184bea351",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 930,
        "y": 640,
        "wires": [
            [
                "b034cbcd3401bb95"
            ]
        ]
    },
    {
        "id": "b034cbcd3401bb95",
        "type": "function",
        "z": "b8f076d184bea351",
        "name": "function 61",
        "func": "var station = msg.payload.station;\nvar i = msg.payload.i;\nvar part = msg.payload.part;\n\n// Create the dynamic key\nvar dynamicKey = \"cell_\" + i + \"_2\";\nvar dynamicKey2 = \"cell_\" + i + \"_3\";\n\n// Create a new msg.payload object with the dynamic assignment\nmsg.payload = {\n    [dynamicKey]: part,\n    [dynamicKey2]:\"blue\"\n};\n\nreturn msg;\n\n//var partvar = \"cell_\"+i + \"_2\"\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 580,
        "wires": [
            [
                "b8f96ae47c864ddb"
            ]
        ]
    },
    {
        "id": "3977af5c350528d1",
        "type": "ui_text_input",
        "z": "72a1c292921690de",
        "name": "Gas Meter Code",
        "label": "Gas Meter Code",
        "tooltip": "",
        "group": "561c41394b7bdc86",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 600,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5392c6c3aff9c21d",
        "type": "ui_template",
        "z": "72a1c292921690de",
        "group": "561c41394b7bdc86",
        "name": "TAB",
        "order": 3,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "62f63bce2fee691e",
        "type": "ui_form",
        "z": "72a1c292921690de",
        "name": "",
        "label": "",
        "group": "561c41394b7bdc86",
        "order": 2,
        "width": 12,
        "height": 2,
        "options": [
            {
                "label": "Reason",
                "value": "reason",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Please Confirm",
                "value": "confirm",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "reason": "",
            "confirm": false
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 590,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "253855cbf5b0f3e3",
        "type": "debug",
        "z": "56aadc5c2acdc551",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 160,
        "wires": []
    },
    {
        "id": "756d03c7fad15a74",
        "type": "function",
        "z": "56aadc5c2acdc551",
        "name": "function 19",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (a.includes(qr) ){\n    msg.payload.station = qr;\n    return msg;\n}\n\nelse {\n    msg.payload.part = qr;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "aa128ea3d6e00994"
            ]
        ]
    },
    {
        "id": "aa128ea3d6e00994",
        "type": "join",
        "z": "56aadc5c2acdc551",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 320,
        "wires": [
            [
                "253855cbf5b0f3e3",
                "e85893d061fb0cba"
            ]
        ]
    },
    {
        "id": "99d9fe683f3ba3e2",
        "type": "ui_text_input",
        "z": "56aadc5c2acdc551",
        "name": "",
        "label": "Gas Meter Code",
        "tooltip": "",
        "group": "527790b680b6256d",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "a3996ad1df5fc626",
                "1e6b7ca223db5047"
            ]
        ]
    },
    {
        "id": "a3996ad1df5fc626",
        "type": "function",
        "z": "56aadc5c2acdc551",
        "name": "function 21",
        "func": "if (msg.payload.length > 0) {\n    return msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "756d03c7fad15a74"
            ]
        ]
    },
    {
        "id": "1e6b7ca223db5047",
        "type": "function",
        "z": "56aadc5c2acdc551",
        "name": "function 22",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "99d9fe683f3ba3e2"
            ]
        ]
    },
    {
        "id": "e85893d061fb0cba",
        "type": "mongodb out",
        "z": "56aadc5c2acdc551",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1150,
        "y": 320,
        "wires": []
    },
    {
        "id": "9e7e1bd099edb078",
        "type": "ui_led",
        "z": "56aadc5c2acdc551",
        "order": 2,
        "group": "527790b680b6256d",
        "width": 12,
        "height": 2,
        "label": "Previous Station Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "41f56a2ab76347e5",
        "type": "inject",
        "z": "56aadc5c2acdc551",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "9e7e1bd099edb078"
            ]
        ]
    },
    {
        "id": "7b4c17e76a92264a",
        "type": "inject",
        "z": "56aadc5c2acdc551",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "9e7e1bd099edb078"
            ]
        ]
    },
    {
        "id": "6e41ee7ac8425ffc",
        "type": "ui_template",
        "z": "56aadc5c2acdc551",
        "group": "527790b680b6256d",
        "name": "TAB",
        "order": 4,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: x-large;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        //background: #000000b8;\n        overflow: hidden;\n        border-radius: 5px;\n        font-weight: bold;\n        font-size: 1.5rem;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ebc91b64dd4ee54b",
        "type": "ui_form",
        "z": "56aadc5c2acdc551",
        "name": "",
        "label": "",
        "group": "527790b680b6256d",
        "order": 3,
        "width": 12,
        "height": 2,
        "options": [
            {
                "label": "Reason",
                "value": "reason",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Please Confirm",
                "value": "confirm",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "reason": "",
            "confirm": false
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "60a604435ce76cdf",
        "type": "inject",
        "z": "56aadc5c2acdc551",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "4c3bd508923e56dc",
        "type": "inject",
        "z": "56aadc5c2acdc551",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 580,
        "wires": [
            [
                "29fdfb863b90ca65"
            ]
        ]
    },
    {
        "id": "29fdfb863b90ca65",
        "type": "debug",
        "z": "56aadc5c2acdc551",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 580,
        "wires": []
    },
    {
        "id": "4be9c8eec89664fd",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "2d39152b020f5ca7",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 23",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (a.includes(qr) ){\n    msg.payload.station = qr;\n    return msg;\n}\n\nelse {\n    msg.payload.part = qr;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "e61118f296cd8b88",
                "d4508ed14650de88"
            ]
        ]
    },
    {
        "id": "7e34abcafdde732b",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 24",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\",\"9886836524\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (qr in a ){\n\n}\nelse{\nmsg.payload.part = qr;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "d4508ed14650de88"
            ]
        ]
    },
    {
        "id": "e61118f296cd8b88",
        "type": "join",
        "z": "853e3c63c60e8c11",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 340,
        "wires": [
            [
                "4be9c8eec89664fd",
                "3377199d9d6e53b9"
            ]
        ]
    },
    {
        "id": "da0287e5d4abf9fd",
        "type": "ui_text_input",
        "z": "853e3c63c60e8c11",
        "name": "",
        "label": "Gas Meter Code",
        "tooltip": "",
        "group": "f3daddf51f06e53f",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "e882001e32f6e6f3",
                "1bb34e15e91c37c8"
            ]
        ]
    },
    {
        "id": "e882001e32f6e6f3",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 25",
        "func": "if (msg.payload.length > 0) {\n    return msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            [
                "2d39152b020f5ca7",
                "7e34abcafdde732b"
            ]
        ]
    },
    {
        "id": "1bb34e15e91c37c8",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 26",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            [
                "da0287e5d4abf9fd"
            ]
        ]
    },
    {
        "id": "d4508ed14650de88",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 440,
        "wires": []
    },
    {
        "id": "fd18369954ae5594",
        "type": "mongodb out",
        "z": "853e3c63c60e8c11",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1310,
        "y": 360,
        "wires": []
    },
    {
        "id": "9e42bd4bf790b114",
        "type": "ui_template",
        "z": "853e3c63c60e8c11",
        "d": true,
        "group": "f3daddf51f06e53f",
        "name": "LP",
        "order": 4,
        "width": 12,
        "height": 1,
        "format": "\n\n<style>\n.nr-dashboard-theme .nr-dashboard-textinput input {\ncolor: #000000;\nfont-family: inherit;\nborder: none;\nfont-size: xx-large;\nfont-weight: bold;\n}\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: xx-large;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: xx-large;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: xx-large;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6183927254b35720",
        "type": "ui_led",
        "z": "853e3c63c60e8c11",
        "order": 2,
        "group": "f3daddf51f06e53f",
        "width": 12,
        "height": 2,
        "label": "Previous Station Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": true,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "316b1caff14e8974",
        "type": "ui_form",
        "z": "853e3c63c60e8c11",
        "name": "",
        "label": "",
        "group": "f3daddf51f06e53f",
        "order": 3,
        "width": 12,
        "height": 2,
        "options": [
            {
                "label": "Test Pass",
                "value": "testpass",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Test Fail",
                "value": "testfail",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Reason",
                "value": "reason",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "testpass": false,
            "testfail": false,
            "reason": ""
        },
        "payload": "",
        "submit": "SUBMIT",
        "cancel": "CANCEL",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 410,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bb1ab74a79a0cdb6",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "6183927254b35720"
            ]
        ]
    },
    {
        "id": "12ed73c1a8cd514e",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "6183927254b35720"
            ]
        ]
    },
    {
        "id": "9a16172c38e6974f",
        "type": "ui_template",
        "z": "853e3c63c60e8c11",
        "group": "f3daddf51f06e53f",
        "name": "TAB",
        "order": 5,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "88c0526235558555",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 34",
        "func": "msg.payload = {\n    \"station\": \"HGCH7W777\",\n    \"part\": \"863872039033665\",\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 620,
        "wires": [
            [
                "e11d2ede69f4d92b",
                "8e5d6623e1e28854"
            ]
        ]
    },
    {
        "id": "297bd6d7c06dcd5c",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 620,
        "wires": [
            [
                "88c0526235558555"
            ]
        ]
    },
    {
        "id": "5a011489f10719f8",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 620,
        "wires": []
    },
    {
        "id": "e11d2ede69f4d92b",
        "type": "mongodb in",
        "z": "853e3c63c60e8c11",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test1",
        "operation": "find",
        "x": 770,
        "y": 620,
        "wires": [
            [
                "7dc5132581b2ea7d"
            ]
        ]
    },
    {
        "id": "3377199d9d6e53b9",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 35",
        "func": "msg.payload.timeStamp =  new Date().getTime()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "fd18369954ae5594"
            ]
        ]
    },
    {
        "id": "1275b2b7105d67d3",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "aabd52c7c2ddad27"
            ]
        ]
    },
    {
        "id": "aabd52c7c2ddad27",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 36",
        "func": "msg.payload = {\n    \"station\": \"HGCH7W777\",\n    \"part\": \"863872039033665\",\n    \"timeStamp\" :  new Date().getTime(),\n    \"status\": \"OK\"\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 480,
        "wires": [
            [
                "fd18369954ae5594"
            ]
        ]
    },
    {
        "id": "7dc5132581b2ea7d",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 37",
        "func": "if (msg.payload && msg.payload.length > 0) {\n    // Document exists\n    msg.exists = true;\n} else {\n    // Document does not exist\n    msg.exists = false;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 620,
        "wires": [
            [
                "5a011489f10719f8"
            ]
        ]
    },
    {
        "id": "5490b3d05af59522",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 38",
        "func": "// Get the current time\nconst now = new Date();\n\n// Calculate the time 5 minutes ago\nconst seventyFiveMinutesAgo = new Date(now.getTime() - (1 * 60000)).getTime();\n\nmsg.payload = {\n    station: \"HGCH7W777\",\n    part: \"863872039033665\",\n    timeStamp: {\n        $gte: seventyFiveMinutesAgo\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 720,
        "wires": [
            [
                "4601cf43e1fae055"
            ]
        ]
    },
    {
        "id": "313b47d63132b02a",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 720,
        "wires": [
            [
                "5490b3d05af59522"
            ]
        ]
    },
    {
        "id": "4601cf43e1fae055",
        "type": "mongodb in",
        "z": "853e3c63c60e8c11",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test1",
        "operation": "find",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "d96d8af3b935b41e",
                "70f26fcae92c7a5a"
            ]
        ]
    },
    {
        "id": "d96d8af3b935b41e",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 39",
        "func": "if (msg.payload && msg.payload.length > 0) {\n    // Document exists and timestamp is within the last 5 minutes\n    msg.exists = true;\n} else {\n    // Document does not exist or timestamp is older than 5 minutes\n    msg.exists = false;\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "8e5d6623e1e28854",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 520,
        "wires": []
    },
    {
        "id": "70f26fcae92c7a5a",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 40",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Get the last element of the array\n    const lastDocument = msg.payload[msg.payload.length - 1];\n\n    // You can now set this last document to msg.payload or another property to pass it to the next node\n    msg.lastDocument = lastDocument;\n    //msg.payload = lastDocument; // Optional: if you want to overwrite the payload with the last document\n} else {\n    // No documents found or the payload is not an array\n    msg.lastDocument = false;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 820,
        "wires": [
            [
                "4f3cfc9deb341ba3"
            ]
        ]
    },
    {
        "id": "5afe3b5af93058b4",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 860,
        "wires": []
    },
    {
        "id": "4f3cfc9deb341ba3",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 41",
        "func": "msg.payload = false;\nif (msg.lastDocument === false){\n    msg.payload = false\n    return msg\n}\nelse if (msg.lastDocument.status === \"OK\") {\n    msg.payload = true;\n    return msg;\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 840,
        "wires": [
            [
                "5afe3b5af93058b4",
                "6183927254b35720"
            ]
        ]
    },
    {
        "id": "4f45ea8d78e9f73a",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 46",
        "func": "\nmsg.payload = {\n    station: \"HGCH7W777\",\n    part: \"863872039033665\",\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 980,
        "wires": [
            [
                "95182bec96214c1d"
            ]
        ]
    },
    {
        "id": "95182bec96214c1d",
        "type": "mongodb in",
        "z": "853e3c63c60e8c11",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test1",
        "operation": "find",
        "x": 570,
        "y": 980,
        "wires": [
            [
                "8491d0b6045767fd"
            ]
        ]
    },
    {
        "id": "8c74e816df24a3d1",
        "type": "inject",
        "z": "853e3c63c60e8c11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 920,
        "wires": [
            [
                "4f45ea8d78e9f73a"
            ]
        ]
    },
    {
        "id": "3d9ed9e6c3b74212",
        "type": "debug",
        "z": "853e3c63c60e8c11",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 980,
        "wires": []
    },
    {
        "id": "8491d0b6045767fd",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 47",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload.length == 0){\n    msg.prompt=\"Data does not exist\";\n    msg.led = false;\n    return msg;\n}\n\nelse if (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0){\n    // Get the last element of the array\n    const lastDocument = msg.payload[msg.payload.length - 1];\n    // You can now set this last document to msg.payload or another property to pass it to the next node\n    //msg.lastDocument = lastDocument;\n    msg.payload = lastDocument; // Optional: if you want to overwrite the payload with the last document\n    return msg   \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 980,
        "wires": [
            [
                "b0bc35cf1dbda9f0"
            ]
        ]
    },
    {
        "id": "b0bc35cf1dbda9f0",
        "type": "function",
        "z": "853e3c63c60e8c11",
        "name": "function 48",
        "func": "// Get the current time\nconst now = new Date();\n\n// Calculate the time 75 minutes ago\nconst seventyFiveMinutesAgo = new Date(now.getTime() - (75 * 60000)).getTime();\n\nconst difference = (now.getTime() - msg.payload.timeStamp)\n\nmsg.difference = difference;\nif (msg.payload.status === \"NG\" && (msg.difference >= 75*60*1000)){\n    msg.prompt = \"Data exist but NG\";\n    msg.led =  false; \n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference < 1 * 60 * 1000)) {\n    msg.prompt = \"Data exist but not old older than 75 mins\"\n    msg.led = false;\n    return msg;\n}\n\nelse if (msg.payload.status === \"OK\" && (msg.difference >= 1 * 60 * 1000)){\n     msg.prompt = \"Data exist and OK\"\n     msg.led = true;\n     return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 980,
        "wires": [
            [
                "3d9ed9e6c3b74212"
            ]
        ]
    },
    {
        "id": "afe009d43ca913b5",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 27",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (a.includes(qr) ){\n    msg.payload.station = qr;\n    return msg;\n}\n\nelse {\n    msg.payload.part = qr;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "9d7eb9fa89c7bba6"
            ]
        ]
    },
    {
        "id": "0908061c76a36e83",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 28",
        "func": "let a = [ \"1sza2k0081inhgch7w77\", \"1SZA2K0081INHGCH7W77\", \"HGCH7W77\", \"863872039033665\", \"191376160396\", \"4LCN\", \"191376160396\", \"lcn\",\"9886836524\"]\nvar qr = msg.payload\nmsg.payload= {}\nif (qr in a ){\n\n}\nelse{\nmsg.payload.part = qr;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9d7eb9fa89c7bba6",
        "type": "join",
        "z": "d073bdc86cc8e8ec",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 380,
        "wires": [
            [
                "317ee38efb7583cc"
            ]
        ]
    },
    {
        "id": "f27274791c18eb9c",
        "type": "ui_text_input",
        "z": "d073bdc86cc8e8ec",
        "name": "",
        "label": "Gas Meter Code",
        "tooltip": "",
        "group": "0a9a10cc050f8749",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "f272f872ee4f0146",
                "4833c6f4f715d409"
            ]
        ]
    },
    {
        "id": "f272f872ee4f0146",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 29",
        "func": "if (msg.payload.length > 0) {\n    return msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "afe009d43ca913b5",
                "0908061c76a36e83"
            ]
        ]
    },
    {
        "id": "4833c6f4f715d409",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 30",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 440,
        "wires": [
            [
                "f27274791c18eb9c"
            ]
        ]
    },
    {
        "id": "317ee38efb7583cc",
        "type": "mongodb out",
        "z": "d073bdc86cc8e8ec",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1190,
        "y": 440,
        "wires": []
    },
    {
        "id": "617970d3ed51e6ce",
        "type": "ui_template",
        "z": "d073bdc86cc8e8ec",
        "d": true,
        "group": "0a9a10cc050f8749",
        "name": "LP",
        "order": 5,
        "width": 12,
        "height": 1,
        "format": "\n\n<style>\n.nr-dashboard-theme .nr-dashboard-textinput input {\ncolor: #000000;\nfont-family: inherit;\nborder: none;\nfont-size: xx-large;\nfont-weight: bold;\n}\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: xx-large;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: xx-large;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: xx-large;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "67f20f8f060db751",
        "type": "ui_form",
        "z": "d073bdc86cc8e8ec",
        "name": "",
        "label": "",
        "group": "0a9a10cc050f8749",
        "order": 3,
        "width": 12,
        "height": 2,
        "options": [
            {
                "label": "Test Pass",
                "value": "testpass",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Test Fail",
                "value": "testfail",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Reason",
                "value": "reason",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "testpass": false,
            "testfail": false,
            "reason": ""
        },
        "payload": "",
        "submit": "SUBMIT",
        "cancel": "CANCEL",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3e575868c814931b",
        "type": "ui_template",
        "z": "d073bdc86cc8e8ec",
        "group": "0a9a10cc050f8749",
        "name": "TAB",
        "order": 4,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "163b54afd05bbf4c",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 42",
        "func": "// Get the current time\nconst now = new Date();\n\n// Calculate the time 5 minutes ago\nconst eightHoursAgo = new Date(now.getTime() - (480 * 60000)).getTime();\n\nmsg.payload = {\n    station: \"HGCH7W777\",\n    part: \"863872039033665\",\n    timeStamp: {\n        $gte: eightHoursAgo\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 640,
        "wires": [
            [
                "2751b95ab5607e86"
            ]
        ]
    },
    {
        "id": "f01c1b821cd3a038",
        "type": "inject",
        "z": "d073bdc86cc8e8ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "163b54afd05bbf4c"
            ]
        ]
    },
    {
        "id": "2751b95ab5607e86",
        "type": "mongodb in",
        "z": "d073bdc86cc8e8ec",
        "mongodb": "a662ec5f58a81769",
        "name": "",
        "collection": "test2",
        "operation": "find",
        "x": 550,
        "y": 640,
        "wires": [
            [
                "d6f86db47b34ec6a"
            ]
        ]
    },
    {
        "id": "d6f86db47b34ec6a",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 43",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Get the last element of the array\n    const lastDocument = msg.payload[msg.payload.length - 1];\n\n    // You can now set this last document to msg.payload or another property to pass it to the next node\n    msg.lastDocument = lastDocument;\n    //msg.payload = lastDocument; // Optional: if you want to overwrite the payload with the last document\n} else {\n    // No documents found or the payload is not an array\n    msg.lastDocument = false;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 640,
        "wires": [
            [
                "c552eaa10b0797ae"
            ]
        ]
    },
    {
        "id": "1f432cc9fe05c983",
        "type": "debug",
        "z": "d073bdc86cc8e8ec",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 680,
        "wires": []
    },
    {
        "id": "c552eaa10b0797ae",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 44",
        "func": "msg.payload = false;\nif (msg.lastDocument === false){\n    msg.payload = false\n    return msg\n}\nelse if (msg.lastDocument.status === \"OK\") {\n    msg.payload = true;\n    return msg;\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 640,
        "wires": [
            [
                "1f432cc9fe05c983",
                "7b6d78fb8b455bd8"
            ]
        ]
    },
    {
        "id": "7b6d78fb8b455bd8",
        "type": "ui_led",
        "z": "d073bdc86cc8e8ec",
        "order": 2,
        "group": "0a9a10cc050f8749",
        "width": 12,
        "height": 2,
        "label": "Previous Station Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 640,
        "wires": []
    },
    {
        "id": "5fb21cb35e76a3bf",
        "type": "inject",
        "z": "d073bdc86cc8e8ec",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 930,
        "y": 540,
        "wires": [
            [
                "66be998ec5a03406"
            ]
        ]
    },
    {
        "id": "66be998ec5a03406",
        "type": "function",
        "z": "d073bdc86cc8e8ec",
        "name": "function 45",
        "func": "msg.payload = {\n    \"station\": \"HGCH7W777\",\n    \"part\": \"863872039033665\",\n    \"timeStamp\" :  new Date().getTime(),\n    \"status\": \"OK\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "317ee38efb7583cc"
            ]
        ]
    },
    {
        "id": "353120158616325e",
        "type": "ui_template",
        "z": "093645b42d728fc1",
        "d": true,
        "group": "ee5083f36c786e27",
        "name": "GEAR PREDICTORS",
        "order": 2,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n\n<table style=\"width:100%\">\n    <thead>\n        <tr>\n            <th>Substation</th>\n            <th>Part QR</th>\n            <th>Result</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"i in [1,2,3,4,5,6,7,8]\">\n            <td>Sub Station {{i}}</td>\n            <td ng-bind=\"cell_{{i}}_2\"></td>\n            <td>\n                <span ng-style=\"{\n                        'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                        'display': 'inline-block',\n                        'width': '20px',\n                        'height': '20px',\n                        'border-radius': '50%'\n                    }\">\n                </span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a443435f35a021c0",
        "type": "ui_template",
        "z": "093645b42d728fc1",
        "group": "ee5083f36c786e27",
        "name": "GEAR PREDICTORS",
        "order": 3,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n<div style=\"display: flex; width: 100%; justify-content: space-between;\">\n    <!-- Left half of the table for substations 1-6 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [1,2,3,4,5,6]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <!-- Right half of the table for substations 7-12 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [7,8,9,10,11,12]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n</div>\n</div>\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5d04872e43c6b278",
        "type": "ui_text_input",
        "z": "093645b42d728fc1",
        "name": "",
        "label": "Scan Station And Part",
        "tooltip": "",
        "group": "ee5083f36c786e27",
        "order": 1,
        "width": 18,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a7b123e95b51acbd",
        "type": "ui_text_input",
        "z": "2f16c5271fa967f5",
        "name": "",
        "label": "Gas Meter Code",
        "tooltip": "",
        "group": "5a0ae2b170773904",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "48b177624b06256e",
        "type": "ui_template",
        "z": "2f16c5271fa967f5",
        "group": "5a0ae2b170773904",
        "name": "GEAR ASSEMBLY",
        "order": 3,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: x-large;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        //background: #000000b8;\n        overflow: hidden;\n        border-radius: 5px;\n        font-weight: bold;\n        font-size: 1.5rem;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "85fdbeb057ec387b",
        "type": "ui_text",
        "z": "2f16c5271fa967f5",
        "group": "5a0ae2b170773904",
        "order": 2,
        "width": 12,
        "height": 2,
        "name": "",
        "label": "Predicted Gear",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 120,
        "y": 220,
        "wires": []
    },
    {
        "id": "4df71fd8f0b321b7",
        "type": "ui_template",
        "z": "504ee6764837011b",
        "group": "3c636316d0534fb9",
        "name": "Q-MAX",
        "order": 3,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n<div style=\"display: flex; width: 100%; justify-content: space-between;\">\n    <!-- Left half of the table for substations 1-6 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [1,2,3,4,5,6]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <!-- Right half of the table for substations 7-12 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [7,8,9,10,11,12]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n</div>\n</div>\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "553607d68efe7cc6",
        "type": "ui_text_input",
        "z": "504ee6764837011b",
        "name": "",
        "label": "Scan Station And Part",
        "tooltip": "",
        "group": "3c636316d0534fb9",
        "order": 1,
        "width": 18,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 180,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2caa82ca48f6ca49",
        "type": "ui_template",
        "z": "504ee6764837011b",
        "group": "45245a51443e6ce3",
        "name": "Q-MIN",
        "order": 2,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n<div style=\"display: flex; width: 100%; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;\">\n    <!-- Top row of tables for substations 1-24 -->\n    <!-- Tables for substations 1,1-1,6; 2,1-2,6; 3,1-3,6; 4,1-4,6 -->\n    <div ng-repeat=\"tableNumber in [1, 2, 3, 4]\" style=\"width:24%; margin-right: 1%;\">\n        <table style=\"width:100%;\">\n            <thead>\n                <tr>\n                    <th>Q-MIN M/C {{tableNumber}}</th>\n                    <th>Result</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat=\"substationPosition in [1, 2, 3, 4, 5, 6]\">\n                    <td>Q-MIN M/C {{tableNumber}},{{substationPosition}}</td>\n                    <td>\n                        <span ng-style=\"{\n                                'background-color': cell_{{tableNumber}}_{{substationPosition}} === undefined ? 'gray' : (cell_{{tableNumber}}_{{substationPosition}} ? cell_{{tableNumber}}_{{substationPosition}} : 'red'),\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                            }\">\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div style=\"display: flex; width: 100%; justify-content: space-between; flex-wrap: wrap;\">\n    <!-- Bottom row of tables for substations 25-48 -->\n    <!-- Tables for substations 5,1-5,6; 6,1-6,6; 7,1-7,6; 8,1-8,6 -->\n    <div ng-repeat=\"tableNumber in [5, 6, 7, 8]\" style=\"width:24%; margin-right: 1%;\">\n        <table style=\"width:100%;\">\n            <thead>\n                <tr>\n                    <th>Q-MIN M/C {{tableNumber}}</th>\n                    <th>Result</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat=\"substationPosition in [1, 2, 3, 4, 5, 6]\">\n                    <td>Q-MIN M/C {{tableNumber}},{{substationPosition}}</td>\n                    <td>\n                        <span ng-style=\"{\n                                'background-color': cell_{{tableNumber}}_{{substationPosition}} === undefined ? 'gray' : (cell_{{tableNumber}}_{{substationPosition}} ? cell_{{tableNumber}}_{{substationPosition}} : 'red'),\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                            }\">\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 3px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 3px;\n        border-bottom: 1px solid #ddd;\n        font-size:15px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 90,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "64e0a1d41af554c4",
        "type": "ui_text_input",
        "z": "504ee6764837011b",
        "name": "",
        "label": "Scan Station And Part",
        "tooltip": "",
        "group": "45245a51443e6ce3",
        "order": 1,
        "width": 18,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 140,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "74db7a46bbc0dc32",
        "type": "ui_template",
        "z": "504ee6764837011b",
        "d": true,
        "group": "45245a51443e6ce3",
        "name": "Q-MIN",
        "order": 2,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n<div style=\"display: flex; width: 100%; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;\">\n    <!-- Top row of tables for substations 1-24 -->\n    <!-- Tables for substations 1-6, 7-12, 13-18, 19-24 -->\n    <div ng-repeat=\"n in [1,7,13,19]\" style=\"width:24%; margin-right: 1%;\">\n        <div ng-repeat=\"k in [1,2,3,4]\">\n        <table style=\"width:100%;\">\n            <thead>\n                <tr>\n                    <th>Q-MIN M/C </th>\n                    <th>Result</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat=\"i in [n, n+1, n+2, n+3, n+4, n+5]\">\n                    <tr ng-repeat=\"j in [k, k+1, k+2, k+3]\">\n                    <td>Q-MIN M/C {{i}}</td>\n                    <td>\n                        <span ng-style=\"{\n                                'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                            }\">\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div style=\"display: flex; width: 100%; justify-content: space-between; flex-wrap: wrap;\">\n    <!-- Bottom row of tables for substations 25-48 -->\n    <!-- Tables for substations 25-30, 31-36, 37-42, 43-48 -->\n    <div ng-repeat=\"n in [25, 31, 37, 43]\" style=\"width:24%; margin-right: 1%;\">\n        <table style=\"width:100%;\">\n            <thead>\n                <tr>\n                    <th>Substation</th>\n                    <th>Result</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat=\"i in [n, n+1, n+2, n+3, n+4, n+5]\">\n                    <td>Sub Station {{i}}</td>\n                    <td>\n                        <span ng-style=\"{\n                                'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                                'display': 'inline-block',\n                                'width': '20px',\n                                'height': '20px',\n                                'border-radius': '50%'\n                            }\">\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 3px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 3px;\n        border-bottom: 1px solid #ddd;\n        font-size:15px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 90,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c935ab45c714bb04",
        "type": "ui_template",
        "z": "68d5b0cb02c0e29f",
        "group": "0a31c08114eeef4f",
        "name": "GEAR PREDICTORS",
        "order": 2,
        "width": 18,
        "height": 7,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data) {\n                // Update cells only if the corresponding data is received\n                for (let i = 1; i <= 8; i++) {\n                    for (let j = 1; j <= 3; j++) {\n                        let cellId = 'cell_' + i + '_' + j;\n                        if (data[cellId] !== undefined) {\n                            // Update the cell with the new value\n                            scope[cellId] = data[cellId];\n                        }\n                    }\n                }\n            }\n        });\n    })(scope);\n</script>\n<div style=\"display: flex; width: 100%; justify-content: space-between;\">\n    <!-- Left half of the table for substations 1-6 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [1,2,3,4,5,6]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <!-- Right half of the table for substations 7-12 -->\n    <table style=\"width:49%;\">\n        <thead>\n            <tr>\n                <th>Substation</th>\n                <th>Part QR</th>\n                <th>Result</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"i in [7,8,9,10,11,12]\">\n                <td>Sub Station {{i}}</td>\n                <td ng-bind=\"cell_{{i}}_2\"></td>\n                <td>\n                    <span ng-style=\"{\n                            'background-color': cell_{{i}}_3 === undefined ? 'gray' : (cell_{{i}}_3 ? cell_{{i}}_3 : 'red'),\n                            'display': 'inline-block',\n                            'width': '20px',\n                            'height': '20px',\n                            'border-radius': '50%'\n                        }\">\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n</div>\n</div>\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n        font-size:20px;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #0097cf;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #02b8ff;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cb1a882c0146b202",
        "type": "ui_text_input",
        "z": "68d5b0cb02c0e29f",
        "name": "",
        "label": "Scan Station And Part",
        "tooltip": "",
        "group": "0a31c08114eeef4f",
        "order": 1,
        "width": 18,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "77ef2a781ee9ab63",
        "type": "ui_text_input",
        "z": "1f6afd3241d4c176",
        "name": "",
        "label": "Scan Consecutive Parts",
        "tooltip": "",
        "group": "5e2b21da5762cd15",
        "order": 1,
        "width": 9,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "btn",
        "topicType": "msg",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "9b74b151b0287d2c",
                "7d023bad3a6e4909"
            ]
        ]
    },
    {
        "id": "aec5070348827a03",
        "type": "ui_text",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "Last Scanned Set",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b32ebe75eef76fd",
        "type": "ui_text",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "QR-Code 1",
        "format": "{{msg.payload.qr1}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 280,
        "wires": []
    },
    {
        "id": "f2654769d6892fbc",
        "type": "ui_text",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "QR-Code 2",
        "format": "{{msg.payload.qr2}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 320,
        "wires": []
    },
    {
        "id": "001499196f29da45",
        "type": "ui_text",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "QR-Code 3",
        "format": "{{msg.payload.qr3}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "b71984475388210d",
        "type": "ui_text",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "QR-Code 4",
        "format": "{{msg.payload.qr4}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 400,
        "wires": []
    },
    {
        "id": "6feb4c86ef358c24",
        "type": "ui_template",
        "z": "1f6afd3241d4c176",
        "group": "5e2b21da5762cd15",
        "name": "PACKING",
        "order": 7,
        "width": 18,
        "height": 1,
        "format": "<style>\n    .nr-dashboard-theme .nr-dashboard-textinput input {\n        color: #000000;\n        font-family: inherit;\n        border: none;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        padding: 10px;\n    }\n\n    .form-container {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        max-width: 800px;\n        //margin: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n    }\n\n    th,\n    td {\n        text-align: left;\n        padding: 12px;\n        border-bottom: 1px solid #ddd;\n    }\n\n    th {\n        background-color: #f8f8f8;\n    }\n\n    input[type=\"text\"] {\n        width: 95%;\n        padding: 10px;\n        margin: 5px 0;\n        box-sizing: border-box;\n        border: 2px solid #ccc;\n        border-radius: 4px;\n    }\n\n    input[type=\"submit\"] {\n        width: 100%;\n        padding: 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 1em;\n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #45a049;\n    }\n\n    .status-indicator {\n        display: inline-block;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n    }\n\n\n\n    body.nr-dashboard-theme md-content md-card {\n        box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);\n        background: #acb1c2;\n        overflow: hidden;\n        border-radius: 5px;\n        background: #acb1c2;\n        color: #111111;\n        font-size: 1.5rem;\n        font-weight: bold;\n    }\n\n    md-card.nr-dashboard-template:nth-child(n) {\n        background: #acb1c2;\n    }\n\n\n    #Tab_GAS-METER-TRACEABILITY {\n        height: 100vh;\n        //background-image: url(\"/img/logo3.png\");\n        background-color: #acb1c2;\n        background-attachment: fixed;\n        background-size: 100%;\n        background-repeat: no-repeat;\n    }\n\n    .nr-dashboard-cardpanel>p {\n        //group name;\n        max-height: 32px;\n        min-height: 32px;\n        margin-left: 12px;\n        margin-top: 10px;\n        margin-bottom: 12px;\n        font-weight: 700;\n        font-size: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row-reverse;\n        align-content: flex-end;\n        justify-content: center;\n        background-color: rgb(255, 255, 255);\n\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #111111;\n    }\n\n    .md-toolbar-tools h1,\n    .md-toolbar-tools h2,\n    .md-toolbar-tools h3 {\n        font-size: 1.5rem;\n        font-weight: 800;\n        margin: inherit;\n        font-style: normal;\n        //font-family: serif;\n    }\n\n    #toolbar {\n        display: flex;\n        background: rgb(255, 255, 255);\n        background: linear-gradient(90deg, rgba(255, 255, 255, 1) 2%, rgba(3, 12, 66, 1) 50%, rgba(255, 255, 255, 1) 98%);\n    }\n\n    #nr-dashboard-toolbar {\n        justify-content: space-between;\n    }\n\n    md-input-container:not(.md-input-has-value):not(.md-input-has-placeholder) input:not(:focus) {\n        color: transparent;\n        border: none;\n    }\n</style>\n\n<script>\n    const img = document.createElement('img');\n    img.src = 'img/raychem.png';\n    img.style.display = 'flex';\n    const logo = document.createElement('img');\n    logo.src = 'img/raychem.png';\n    logo.style.display = 'flex';\n    const list = document.getElementById(\"nr-dashboard-toolbar\");\n    list.removeChild(list.firstElementChild);\n    list.insertBefore(img, list.children[0]);\n    list.appendChild(logo);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "066de3173534e06d",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 65",
        "func": "// Retrieve the flow variable\nvar a = flow.get('b') || null;\n\n// Check if flowVar is not set, if so, initialize it with the current payload\nif (a === null) {\n    flow.set('b', msg.payload);\n    return msg;\n} \n\nelse {\n    // Compare the current msg.payload - 1 with the flow variable\n    if (msg.payload - 1 === a) {\n        // Update the flow variable with the current msg.payload\n        flow.set('b', msg.payload);\n        return msg;\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9b74b151b0287d2c",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 67",
        "func": "if (msg.payload.length > 0) {\n    msg.payload= Number(msg.payload)\n    return msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "066de3173534e06d",
                "0bf81b34c594ca2b",
                "06c62175b85c6d0d",
                "5a91c2d2d8ab9d5e",
                "89f31023654cc201"
            ]
        ]
    },
    {
        "id": "7d023bad3a6e4909",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 68",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 280,
        "wires": [
            [
                "77ef2a781ee9ab63"
            ]
        ]
    },
    {
        "id": "0bf81b34c594ca2b",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 69",
        "func": "msg.a = flow.get(\"previous\");\n\nif (msg.payload == msg.a+1){\n    msg.payload = {\"qr1\" : msg.payload}\n    return msg;\n}\n\n\n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "6b32ebe75eef76fd",
                "04833736c098d232"
            ]
        ]
    },
    {
        "id": "06c62175b85c6d0d",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 70",
        "func": "msg.a = flow.get(\"previous\");\n\nif (msg.payload == msg.a + 2) {\n    msg.payload = { \"qr2\": msg.payload }\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 320,
        "wires": [
            [
                "f2654769d6892fbc",
                "04833736c098d232"
            ]
        ]
    },
    {
        "id": "5a91c2d2d8ab9d5e",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 71",
        "func": "msg.a = flow.get(\"previous\");\n\nif (msg.payload == msg.a + 3) {\n    msg.payload = { \"qr3\": msg.payload }\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 360,
        "wires": [
            [
                "001499196f29da45",
                "04833736c098d232"
            ]
        ]
    },
    {
        "id": "89f31023654cc201",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 72",
        "func": "msg.a = flow.get(\"previous\");\n\nif (msg.payload == msg.a + 4) {\n    msg.payload = { \"qr4\": msg.payload }\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            [
                "b71984475388210d",
                "04833736c098d232"
            ]
        ]
    },
    {
        "id": "04833736c098d232",
        "type": "join",
        "z": "1f6afd3241d4c176",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "7472f6a25e7e2ec5"
            ]
        ]
    },
    {
        "id": "f487f1a60cf2e1a3",
        "type": "debug",
        "z": "1f6afd3241d4c176",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 220,
        "wires": []
    },
    {
        "id": "5cef81ab69766666",
        "type": "inject",
        "z": "1f6afd3241d4c176",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "b6ac74906f308cd9"
            ]
        ]
    },
    {
        "id": "b6ac74906f308cd9",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 73",
        "func": "flow.set(\"previous\",10)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7472f6a25e7e2ec5",
        "type": "function",
        "z": "1f6afd3241d4c176",
        "name": "function 74",
        "func": "flow.set(\"previous\",msg.payload.qr4)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "f487f1a60cf2e1a3",
                "4bbfe230cca3ca8a"
            ]
        ]
    },
    {
        "id": "9e2c073d75a3db97",
        "type": "inject",
        "z": "1f6afd3241d4c176",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "4bbfe230cca3ca8a"
            ]
        ]
    },
    {
        "id": "4bbfe230cca3ca8a",
        "type": "change",
        "z": "1f6afd3241d4c176",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "previous",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "aec5070348827a03",
                "54543ac598593e8b"
            ]
        ]
    },
    {
        "id": "54543ac598593e8b",
        "type": "debug",
        "z": "1f6afd3241d4c176",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 60,
        "wires": []
    }
]